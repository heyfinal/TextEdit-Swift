name: Build and Test TextEdit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test on macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show Swift version  
      run: swift --version
      
    - name: Build project
      run: swift build -v
      
    - name: Run tests
      run: swift test -v
      
    - name: Build release
      run: swift build -c release -v
      
    - name: Create app bundle
      run: |
        mkdir -p TextEdit.app/Contents/MacOS
        mkdir -p TextEdit.app/Contents/Resources
        cp .build/release/TextEdit TextEdit.app/Contents/MacOS/
        
        # Create Info.plist
        cat > TextEdit.app/Contents/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>TextEdit</string>
            <key>CFBundleIdentifier</key>
            <string>com.aimemory.textedit</string>
            <key>CFBundleName</key>
            <string>TextEdit</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>LSMinimumSystemVersion</key>
            <string>13.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>NSAppTransportSecurity</key>
            <dict>
                <key>NSAllowsArbitraryLoads</key>
                <false/>
            </dict>
            <key>NSHumanReadableCopyright</key>
            <string>Â© 2025 AI Memory Nexus Project</string>
        </dict>
        </plist>
        EOF
        
    - name: Create DMG installer
      run: |
        # Create temporary directory for DMG contents
        mkdir -p dmg-contents
        cp -R TextEdit.app dmg-contents/
        
        # Create Applications symlink
        ln -s /Applications dmg-contents/Applications
        
        # Create DMG
        hdiutil create -volname "TextEdit" -srcfolder dmg-contents -ov -format UDZO TextEdit.dmg
        
    - name: Upload app bundle
      uses: actions/upload-artifact@v4
      with:
        name: TextEdit-macOS
        path: TextEdit.app
        
    - name: Upload DMG
      uses: actions/upload-artifact@v4
      with:
        name: TextEdit-DMG
        path: TextEdit.dmg

  release:
    name: Create Release
    needs: build-and-test
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          TextEdit-DMG/TextEdit.dmg
        body: |
          ðŸ§  **TextEdit for macOS**
          
          A modern, dark-themed text editor built with Swift and AppKit.
          
          ## Features
          - Native macOS dark mode integration
          - Rounded window corners  
          - Brain emoji app icon ðŸ§ 
          - Syntax-aware text editing
          - Line numbers and word wrap
          - Zoom controls
          - Full menu integration
          
          ## Installation
          1. Download TextEdit.dmg
          2. Mount the disk image
          3. Drag TextEdit.app to Applications folder
          
          ## Requirements
          - macOS 13.0 or later
          
          Built with GitHub Actions âš¡
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}